import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
from sklearn.neighbors import KNeighborsClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
from tensorflow.keras.datasets import mnist

# 1️⃣ โหลด MNIST Dataset
(X_train, y_train), (X_test, y_test) = mnist.load_data()

# 2️⃣ ตรวจสอบข้อมูล Missing Values
print(f"Missing values in training set: {np.isnan(X_train).sum()}")
print(f"Missing values in test set: {np.isnan(X_test).sum()}")

# แสดงภาพตัวเลขตัวอย่างจาก Dataset
fig, axes = plt.subplots(1, 5, figsize=(10, 3))
for i, ax in enumerate(axes):
    ax.imshow(X_train[i], cmap='gray')
    ax.set_title(f"Label: {y_train[i]}")
    ax.axis("off")
plt.show()

# 3️⃣ แปลงข้อมูลให้เหมาะกับ Machine Learning Model
X_train = X_train.reshape(X_train.shape[0], -1)  # Flatten 28x28 -> 784
X_test = X_test.reshape(X_test.shape[0], -1)

# Normalize ข้อมูลให้อยู่ในช่วง 0-1
X_train = X_train / 255.0
X_test = X_test / 255.0

# 4️⃣ ทดสอบโมเดลหลายแบบ
models = {
    "SVM": SVC(),
    "KNN": KNeighborsClassifier(n_neighbors=5),
    "Random Forest": RandomForestClassifier(n_estimators=100)
}

for name, model in models.items():
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    print(f"{name} Accuracy: {acc:.4f}")
    print(classification_report(y_test, y_pred))
