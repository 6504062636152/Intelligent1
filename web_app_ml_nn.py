# -*- coding: utf-8 -*-
"""web_app_ml_nn

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1j1YKHrYAtT4TVvdPqTS9SWJNncpYIdje
"""

import streamlit as st
import numpy as np
import tensorflow as tf
from tensorflow.keras.datasets import mnist, cifar10
from tensorflow.keras.models import load_model
import matplotlib.pyplot as plt

# ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ó‡∏µ‡πà‡∏ù‡∏∂‡∏Å‡πÑ‡∏ß‡πâ
mnist_model = load_model("mnist_model.h5")
cifar10_model = load_model("cifar10_model.h5")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á MNIST ‡πÅ‡∏•‡∏∞ CIFAR-10
(_, _), (X_mnist, _) = mnist.load_data()
(_, _), (X_cifar, _) = cifar10.load_data()
X_mnist = X_mnist.astype("float32") / 255.0
X_cifar = X_cifar.astype("float32") / 255.0
X_mnist = X_mnist.reshape(-1, 28, 28, 1)

# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö Streamlit
st.title("Machine Learning & Neural Network Web App")

# ‡∏™‡∏£‡πâ‡∏≤‡∏á Sidebar ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤
page = st.sidebar.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏´‡∏ô‡πâ‡∏≤:", ["üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• & ‡∏ó‡∏§‡∏©‡∏é‡∏µ", "ü§ñ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö MNIST Model", "üñºÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö CIFAR-10 Model"])

if page == "üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• & ‡∏ó‡∏§‡∏©‡∏é‡∏µ":
    st.header("üìä ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÇ‡∏°‡πÄ‡∏î‡∏•")
    st.write("### 1Ô∏è‚É£ ‡∏Å‡∏≤‡∏£‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
    st.write("- MNIST: ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏Ç‡∏ô‡∏≤‡∏î 28x28 ‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏•\n- CIFAR-10: ‡∏†‡∏≤‡∏û‡∏Ç‡∏ô‡∏≤‡∏î 32x32 ‡∏û‡∏¥‡∏Å‡πÄ‡∏ã‡∏• 10 ‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà")
    st.write("### 2Ô∏è‚É£ ‡∏ó‡∏§‡∏©‡∏é‡∏µ‡∏Ç‡∏≠‡∏á‡∏≠‡∏±‡∏•‡∏Å‡∏≠‡∏£‡∏¥‡∏ó‡∏∂‡∏°")
    st.write("- MNIST: ‡πÉ‡∏ä‡πâ SVM, KNN, Random Forest\n- CIFAR-10: ‡πÉ‡∏ä‡πâ CNN")

elif page == "ü§ñ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö MNIST Model":
    st.header("ü§ñ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö MNIST Model")
    index = st.slider("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û (0-9999):", 0, 9999, 0)
    image = X_mnist[index]
    pred = mnist_model.predict(image.reshape(1, 28, 28, 1))
    label = np.argmax(pred)
    st.image(image.reshape(28, 28), caption=f"Prediction: {label}", width=150)

elif page == "üñºÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö CIFAR-10 Model":
    st.header("üñºÔ∏è ‡∏ó‡∏î‡∏™‡∏≠‡∏ö CIFAR-10 Model")
    class_names = ["airplane", "automobile", "bird", "cat", "deer", "dog", "frog", "horse", "ship", "truck"]
    index = st.slider("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û (0-9999):", 0, 9999, 0)
    image = X_cifar[index]
    pred = cifar10_model.predict(image.reshape(1, 32, 32, 3))
    label = class_names[np.argmax(pred)]
    st.image(image, caption=f"Prediction: {label}", width=150)